[
  
    {
      "title"    : "ES笔记-keyword",
      "title-lower"    : "es笔记-keyword",
      "sub-titile" : "",
      "sub-titile-lower" : "",
      "categories" : "es",
      "tags"     : "",
      "url"      : "/es/2022/01/12/ES%E7%AC%94%E8%AE%B0-keyword.html",
      "date"     : "2022-01-12 12:34:00 +0800",
      "content"     : ""
    } ,
  
    {
      "title"    : "Spring-boot运行调试",
      "title-lower"    : "spring-boot运行调试",
      "sub-titile" : "",
      "sub-titile-lower" : "",
      "categories" : "spring-boot",
      "tags"     : "",
      "url"      : "/spring-boot/2022/01/05/Spring-boot%E8%BF%90%E8%A1%8C.html",
      "date"     : "2022-01-05 18:54:00 +0800",
      "content"     : "springboot核心原理      SpringBoot核心通过Maven继承依赖关系快速整合第三方框架    &amp;lt;!-- 当你添加了相应的starter模块，就相当于添加了相应的所有必须的依赖包，包括spring-boot-starter（这是Spring Boot的核心启动器，包含了自动配置、日志和YAML）；spring-boot-starter-test（支持常规的测..."
    } ,
  
    {
      "title"    : "redis笔记-单机数据库实现-RDB持久化",
      "title-lower"    : "redis笔记-单机数据库实现-rdb持久化",
      "sub-titile" : "",
      "sub-titile-lower" : "",
      "categories" : "redis",
      "tags"     : "",
      "url"      : "/redis/2018/06/23/redis%E7%AC%94%E8%AE%B0-%E5%8D%95%E6%9C%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E7%8E%B0-RDB%E6%8C%81%E4%B9%85%E5%8C%96.html",
      "date"     : "2018-06-23 15:18:00 +0800",
      "content"     : "RDB 文件的创建与载入一个概念：服务器中非空数据库以及数据库中的键值对 称为 数据库状态创建def SAVE():# 创建RDB文件rdbSave()def BGSAVE():   	# 创建子进程   pid = fork()    				if pid == 0:					# 子进程负责创建RDB文件		rdbSave()				# 完成之后向父进程发送信号		signal_paren..."
    } ,
  
    {
      "title"    : "redis笔记-单机数据库实现-数据库",
      "title-lower"    : "redis笔记-单机数据库实现-数据库",
      "sub-titile" : "",
      "sub-titile-lower" : "",
      "categories" : "redis",
      "tags"     : "",
      "url"      : "/redis/2018/06/22/redis%E7%AC%94%E8%AE%B0-%E5%8D%95%E6%9C%BA%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E7%8E%B0-%E6%95%B0%E6%8D%AE%E5%BA%93.html",
      "date"     : "2018-06-22 15:18:00 +0800",
      "content"     : "结构struct redisServer {	// ...	  	// 数据库数组  	redisDb *db;  	// 服务器的数据库数量  	int dbnum;  	  	// ...   }-----------------------------typedef struct redisDb {    // 数据库键空间，保存着数据库中的所有键值对    dict *dict;  ..."
    } ,
  
    {
      "title"    : "redis笔记-数据结构",
      "title-lower"    : "redis笔记-数据结构",
      "sub-titile" : "",
      "sub-titile-lower" : "",
      "categories" : "redis",
      "tags"     : "",
      "url"      : "/redis/2018/03/26/redis%E7%AC%94%E8%AE%B0-%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html",
      "date"     : "2018-03-26 18:54:00 +0800",
      "content"     : "跳跃表      两个地方用到：有序集合键；集群节点中，内部数据结构        实现：    typedef struct zskiplist {  // 表头节点和表尾节点  structz skiplistNode *header, *tail;  // 表中节点的数量  unsigned long length;  // 表中层数最大的节点的层数  int level;} zski..."
    } 
  
]